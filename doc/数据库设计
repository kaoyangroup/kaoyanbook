用户信息表(User){
    用户名 | 密码 | 姓名 | 身份类型 | 身份证号 | 邮箱号 | 手机号 | 用户类型 | 账户余额
}

常用联系人表{
    常用联系人用户名# | 旅客用户名#
}

价目表{
    出发站# | 目的站# | 路线类型# | 座位类型# | 价格
}
exp: (北京,武汉,高铁,二等座,93)



路线表{
    路线号# | 途经站# | 到达次序 | 到达时间 | 到达日期

exp( T49,T,北京站,13:00,当日)
}


列车表{
    列车号# | 列车类型 | 车厢节数
}

车厢表{
    车厢ID# | 列车号 | 车厢号 | 车厢类型 | 座位数量 
}

座位表{
    座位ID# | 座位号 | 车厢ID


运营表(Operation){ 
   路线号# | 日期#
}

订单表(Order){
    订单号# | 车票编号 | 用户名 | 订单生成时间 | 订单类型 | 出发地 | 目的地
}

订票表{
    车票编号# | 路线号 | 座位ID | 余票标识码 | 余票数量 | 发车日期
}

/*
exp:
    座位号: 05-A 05排A座
    车厢号: [1,3]

*/

余票表{
    路线号# | 日期# | 出发站# | 目的站# | 座位类型# | 余票数量
}









----------------------------------------view---------------------------------------
车票信息表(view){
    车票编号 | 车次号 | 车厢号 | 座位号 | 购票人身份证号 | 出发地 | 目的地 | 出发时间 | 价格
}

------------------------------------------算法-------------------------------------

现给定乘车区间[a,b]
####################################  1.获得可选车次 ####################################


###################################  2.得到可订车次信息表(前端) ################################
车次 | 出发站 | 目的站 | 出发时间 | 到达时间 | 卧铺余票 | 卧铺价格 | 硬座余票 | 硬座价格 | 预订








---------------------------------------------------------------------------------  SQL ----------------------------------------------------------------------
//查询一条路线上的所有途经站
for( i = 0 to 5)
    select 路线号,途径站 where 到达次序 = i； 
}


//查询A站和B站同时属于的路线
select 路线号 from 路线表 where 途经站=A, 路线号={
    select 路线号 from 路线表 where 途经站=B
}










----------------------------------------------------------------------  用例模型 ------------------------------------------------------------------------------




//余票查询: [始发站A, 终点站B, 日期]
    + 生成view:可订车次信息表


//订票: 购买了一张 [路线R,日期D,始发站A,终点站B]的票
    + 更新订票表
    + 更新余票表
    + 更新订单表
    
    +购买成功
        + 更新用户信息表(余额)
    +购买失败
        + 订票表回滚
        + 余票表回滚
        + 订单表回滚

//退票

//改签


------------------------------------------------- 操作契约 -------------------------------------------------------------------------
//订票 
    + 在[订票表]检索可订座位,锁定一个可用座位, 返回 [车票编码]
    + 更新[订票表].[余票数量,余票标识码]
    + 更新[余票表].[余票]
    + 插入[订单表].record
    + 进入支付页面
        查询[用户信息].[余额]
        + 支付成功(异步回调)
            + 更新[订单表].[订单类型]
            + 更新[用户信息].余额
    + ****支付失败
            

//退票 == 支付失败
